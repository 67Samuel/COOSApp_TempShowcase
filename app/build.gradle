plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'de.mannodermaus.android-junit5'
//    id 'kotlinx-serialization'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.samuel.coosapp2"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.beust:klaxon:5.5' // external lib for parsing json since kotlinx.serialization is quite new


    // Versions
    def coroutines_version = "1.5.0"
    def mockk_version = "1.12.0"
    def junit_jupiter_version = "5.6.0"
    def espresso_version = "3.1.0"
    def test_runner_version = "1.2.0"
    def android_image_cropper_version = "3.1.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0-alpha03'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def fragment = "1.4.0-alpha04"
    implementation "androidx.fragment:fragment-ktx:$fragment"

    // Vimeo
    implementation "com.github.vimeo.vimeo-networking-java:vimeo-networking:2.0.10"
    implementation "com.github.vimeo.vimeo-networking-java:models:2.0.10"

    // ExoPlayer
    def exoplayer = "2.14.2"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer"
    implementation "com.google.android.exoplayer:extension-workmanager:$exoplayer"
//    implementation 'com.github.norulab:android-exoplayer-fullscreen:1.2.1'
    // enable multidex
    implementation "androidx.multidex:multidex:2.0.1"

    //glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // nav components
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def hilt = "2.37"
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-compiler:$hilt"

    def material_version = "1.4.0"
    implementation "com.google.android.material:material:$material_version"

    // material dialogs
    def material_dialogs_version = "3.1.0"
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"

    def dataStore = "1.0.0-rc01"
    implementation "androidx.datastore:datastore-preferences:$dataStore"

    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.4.0-alpha02")

    // -- Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // for view binding delegation
    def lifecycle_version = "2.4.0-alpha03"
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // -- Retrofit2
    def retrofit2_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    // searchbar
    implementation 'com.github.Ferfalk:SimpleSearchView:0.2.0'

    // viewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // Junit5
    def junit5 = "5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5"
//    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5"

    // MockWebServer
    def mockWebServer = "4.9.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServer"

    def espressoCore = "3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"

    def espressoRunner = "1.1.0"
    androidTestImplementation "androidx.test:runner:$espressoRunner"

    def espressoRules = "1.4.0"
    androidTestImplementation "androidx.test:rules:$espressoRules"

    def junitKtx = "1.1.3"
    androidTestImplementation "androidx.test.ext:junit-ktx:$junitKtx"
}